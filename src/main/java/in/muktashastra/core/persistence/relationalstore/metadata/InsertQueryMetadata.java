package in.muktashastra.core.persistence.relationalstore.metadata;

import lombok.Getter;

import java.util.Collections;
import java.util.HashMap;
import java.util.Map;

class InsertQueryMetadata implements QueryMetadata {
    @Getter
    private final String query;
    private final Map<Integer, String> preparedStatementIndexColumnMap = new HashMap<>();

    InsertQueryMetadata(String tableName, Map<String, FieldMetadata> columnMetadataMap) {
        StringBuilder builder = new StringBuilder();
        int indexCounter = 1;
        for(FieldMetadata field : columnMetadataMap.values()) {
            if(field.autoGenerated())
                continue;
            if(!builder.isEmpty()) {
                builder.append(", ");
            }
            builder.append(field.columnName());
            this.preparedStatementIndexColumnMap.put(indexCounter, field.columnName());
            indexCounter++;
        }
        String placeholders = String.join(", ", Collections.nCopies(preparedStatementIndexColumnMap.size(), "?"));
        this.query = String.format("INSERT INTO %s (%s) VALUES (%s)", tableName, builder, placeholders);
    }

    @Override
    public int getNumberOfParameters() {
        return this.preparedStatementIndexColumnMap.size();
    }

    @Override
    public String getColumnNameOfPreparedStatementParamAt(int index) {
        return preparedStatementIndexColumnMap.get(index);
    }
}
